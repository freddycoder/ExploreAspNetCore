name: CI

on:
  push:
    branches: [ master ]
    
env:
  REGISTRY_HOSTNAME: freddycontainers.azurecr.io
  IMAGE_NAME: swaggerdoc
  DEPLOYMENT_NAME: swaggerdoc
  PORT: 5000
  CERTIFICATSSL: ${{ secrets.CERTIFICATSSL }}
  CERTIFICATPEM: ${{ secrets.CERTIFICATPEM }}
  CERTIFICATCRT: ${{ secrets.CERTIFICATCRT }}
  CERTIFICATKEY: ${{ secrets.CERTIFICATKEY }}
  CERTIFICAT_LOCATION: /etc/secret
  CERTIFICAT_MOT_DE_PASSE: ${{ secrets.CERTIFICAT_MOT_DE_PASSE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Login into acr
      - name: Login into ACR
        run: echo ${{ secrets.registryPassword }} | docker login $REGISTRY_HOSTNAME -u ${{ secrets.registryUsername }} --password-stdin

      # Build the image
      - name: Docker build
        run: docker build -t $IMAGE_NAME:$GITHUB_RUN_ID .
        
      # Tag the images
      - name: Docker tag
        run: docker tag $IMAGE_NAME:$GITHUB_RUN_ID $REGISTRY_HOSTNAME/$IMAGE_NAME:$GITHUB_RUN_ID

      # Push the image
      - name: Docker push
        run: docker push $REGISTRY_HOSTNAME/$IMAGE_NAME:$GITHUB_RUN_ID

      # Build the image nginx
      #- name: Docker build
      #  run: docker build -f ./Infrastructure/nginx-https-ready.dockerfile -t nginx-https-ready:first .
        
      # Tag the images nginx
      #- name: Docker tag
      #  run: docker tag nginx-https-ready:first $REGISTRY_HOSTNAME/nginx-https-ready:first

      # Push the image nginx
      #- name: Docker push
      #  run: docker push $REGISTRY_HOSTNAME/nginx-https-ready:first

      # Connect to Azure Kubernetes
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          resource-group: 'webapidesign'
          cluster-name: 'kubem'

      # Replace variable in kubernetes file
      - name: Replace variable in k8s file
        uses: cschleiden/replace-tokens@v1.0
        with:
          tokenPrefix: '#{'
          tokenSuffix: '}'
          files: '["./Infrastructure/swaggerdoc.yaml", "./Infrastructure/secret/ssl-secret.yaml", "./Infrastructure/nginx.yaml"]'

      # Deploy to kubernetes
      - name: Kubectl apply
        run: |
          kubectl config current-context
          kubectl apply -f ./Infrastructure/swaggerdoc.yaml
